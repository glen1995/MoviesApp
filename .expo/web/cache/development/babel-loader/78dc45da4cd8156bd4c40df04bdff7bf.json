{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/glenja/Desktop/expo/MoviesApp/components/layouts/Tabview.js\";\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TabView, SceneMap, TabBar } from 'react-native-tab-view';\nimport { Movies } from \"../Tabs/Movies\";\nimport { Search } from \"../Tabs/Search\";\nimport { TV } from \"../Tabs/TV\";\nvar initialLayout = {\n  width: Dimensions.get('window').width\n};\n\nvar renderScene = function renderScene(_ref) {\n  var route = _ref.route,\n      jumpTo = _ref.jumpTo;\n\n  switch (route.key) {\n    case \"first\":\n      return React.createElement(Movies, {\n        jumpTo: jumpTo,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 14\n        }\n      });\n\n    case \"second\":\n      return React.createElement(Search, {\n        jumpTo: jumpTo,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      });\n\n    case \"third\":\n      return React.createElement(TV, {\n        jumpTo: jumpTo,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }\n      });\n  }\n};\n\nexport default function TabViewer(props) {\n  var _this2 = this;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState([{\n    key: 'first',\n    title: 'Movies'\n  }, {\n    key: 'second',\n    title: 'Search Results'\n  }, {\n    key: 'third',\n    title: 'Tv shows'\n  }]),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      routes = _React$useState4[0];\n\n  return React.createElement(TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: initialLayout,\n    renderTabBar: function renderTabBar(props) {\n      return React.createElement(TabBar, _extends({}, props, {\n        renderLabel: function renderLabel(_ref2) {\n          var route = _ref2.route,\n              color = _ref2.color;\n          return React.createElement(Text, {\n            style: {\n              color: \"black\",\n              margin: 8\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }\n          }, route.title);\n        },\n        indicatorStyle: {\n          backgroundColor: \"#2c3e50\"\n        },\n        style: {\n          backgroundColor: \"white\"\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }));\n    },\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: StatusBar.currentHeight,\n    backgroundColor: \"white\"\n  },\n  scene: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/glenja/Desktop/expo/MoviesApp/components/layouts/Tabview.js"],"names":["React","TabView","SceneMap","TabBar","Movies","Search","TV","initialLayout","width","Dimensions","get","renderScene","route","jumpTo","key","TabViewer","props","useState","index","setIndex","title","routes","color","margin","backgroundColor","styles","container","StyleSheet","create","marginTop","StatusBar","currentHeight","scene","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, Dimensions, StatusBar,Text } from 'react-native';\nimport { TabView, SceneMap,TabBar} from 'react-native-tab-view';\nimport { Movies } from '../Tabs/Movies';\nimport { Search } from '../Tabs/Search';\nimport { TV } from '../Tabs/TV'\n\n\n const initialLayout = { width: Dimensions.get('window').width };\n\nconst renderScene = ({ route, jumpTo }) => {\n  switch (route.key) {\n    case \"first\":\n      return <Movies jumpTo={jumpTo} />;\n    case \"second\":\n      return <Search jumpTo={jumpTo} />;\n    case \"third\":\n      return <TV jumpTo={jumpTo} />;\n  }\n};\n\nexport default function TabViewer(props) {\nconst [index, setIndex] = React.useState(0);\n  const [routes] = React.useState([\n    { key: 'first', title: 'Movies' },\n    { key: 'second', title: 'Search Results' },\n    {key:'third',title:'Tv shows'}\n  ]);\n  return (\n    <TabView\n      navigationState={{ index, routes }}\n      renderScene={renderScene}\n      onIndexChange={setIndex}\n      initialLayout={initialLayout}\n      renderTabBar={(props) => (\n        <TabBar\n          {...props}\n          renderLabel={({ route, color }) => (\n            <Text style={{ color: \"black\", margin: 8 }}>{route.title}</Text>\n          )}\n          indicatorStyle={{ backgroundColor: \"#2c3e50\" }}\n          style={{ backgroundColor: \"white\" }}\n        />\n      )}\n      style={styles.container}\n\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: StatusBar.currentHeight,\n    backgroundColor:\"white\"\n\n  },\n  scene: {\n    flex: 1,\n  },\n});"]},"metadata":{},"sourceType":"module"}